<% content_for(:page_app) do %>
  <%= render 'votes/vote_template' %>
  <%= render 'references/mini_bib' %>
  <%= render 'users/lists/note' %>
  <%= render 'truncate_abstract' %>
  <%= render 'users/lists/reference_row' %>
  <%= render 'users/lists/reference_list' %>
  <%= render 'crossref/crossref_search', list: @list %>
  <%= render 'crossref/add_by_locator', list: @list %>
  <script>
    <%= render 'users/lists/vue/components/abstract.js' %>
    <%= render 'users/lists/vue/components/mini_bib.js' %>
    <%= render 'users/lists/vue/components/note.js' %>
    <%= render 'users/lists/vue/components/reference_row.js' %>
    <%= render 'users/lists/vue/components/reference_list.js' %>
    <%= render 'crossref/crossref_search.js' %>
    <%= render 'crossref/add_by_locator.js' %>
    var listShowApp = new Vue({
      data: {
        signedIn: false,
        currentUser: '',
        userCanEdit: false,
        allReferences: []
      },
      computed: {
        notes: function() {
          var self = this
          var notes = this.allReferences.map(function(r) {
            var citation = self.$options.filters.cite(r);
            var notes = r.notes.map(function(n){
              return {'note': n, 'citation': citation}
            })
            return notes
          });
          notes = [].concat.apply([], notes)
          return notes
        }
      }
    });
    listShowApp.signedIn = <%= user_signed_in? %>;
    listShowApp.currentUser = '<%= current_user ? current_user.username : '' %>';
    listShowApp.userCanEdit = <%= current_user_can_edit?(list) || list.accepts_public_contributions? %>;
    listShowApp.allReferences = <%= raw render('users/lists/references.json', references: @references) %>;
    listShowApp.$mount('#list-show');
  </script>
<% end %>